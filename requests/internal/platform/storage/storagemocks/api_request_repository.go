// Code generated by mockery v2.35.1. DO NOT EDIT.

package storagemocks

import (
	context "context"

	mooc "github.com/diegodhdev/hexagonal-go-api/requests/internal"
	mock "github.com/stretchr/testify/mock"
)

// ApiRequestRepository is an autogenerated mock type for the ApiRequestRepository type
type ApiRequestRepository struct {
	mock.Mock
}

// Save provides a mock function with given fields: ctx, apiRequest
func (_m *ApiRequestRepository) Save(ctx context.Context, apiRequest mooc.ApiRequest) error {
	ret := _m.Called(ctx, apiRequest)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, mooc.ApiRequest) error); ok {
		r0 = rf(ctx, apiRequest)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewApiRequestRepository creates a new instance of ApiRequestRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewApiRequestRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *ApiRequestRepository {
	mock := &ApiRequestRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
